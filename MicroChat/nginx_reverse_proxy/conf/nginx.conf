worker_processes 1;

events{
    worker_connections 1024;
}

http{
    lua_package_path '/usr/local/openresty/nginx/lua-scripts/?.lua;;';

    #log_format main '$remote_addr - $remote_user [$time_local] "$request"'
    #              '$status $body_bytes_sent "$http_referer" '
    #              '"$http_user_agent" "$http_x_forwarded_for"'

    # access_log  logs/access.log  main;
    error_log on;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    
    keepalive_timeout  120s;
    keepalive_requests 100000;

    # Docker default hostname resolver
    resolver 127.0.0.11 ipv6=off;

     init_by_lua_block{
	local client = require "api/userservice/ping"
	local UserServiceClient = require "microchat_UserService"
    }

   server {
        listen 8080 reuseport;
	    server_name  localhost;

        location / {
            default_type text/plain;
	    
            content_by_lua_block{
            local client = require "api/userservice/ping"
           client.Ping();
          }
        }
        location /login {
            default_type text/plain;
	    
            content_by_lua_block{
            local client = require "api/userservice/login"
            client.Login();
          }
        }
        location /createuser {
            default_type text/plain;
	    
            content_by_lua_block{
            local client = require "api/userservice/createuser"
            client.CreateUser();
          }

        }
        location /getuserid {
            default_type text/plain;
	    
            content_by_lua_block{
            local client = require "api/userservice/getuserid"
            client.GetUserID();
          }

        }
    }




}